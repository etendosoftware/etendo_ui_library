pipeline {
    options {
        // This limits build concurrency to 1 per branch
        disableConcurrentBuilds()
    }

    environment {
        NPM_TOKEN           = credentials('npmjs-access-token')
        EMAIL_ADDRESS       = credentials('email_builds')
        URL_REPO            = "https://bitbucket.org/koodu_software/etendo_ui_library"
        URL_REPO_GIT        = "git@bitbucket.org:koodu_software/etendo_ui_library.git"
        COMMIT_AUTHOR_NAME  = sh(returnStdout: true, script: "git log -1 --pretty=format:'%an'").trim()
        COMMIT_AUTHOR_EMAIL = sh(returnStdout: true, script: "git log -1 --pretty=format:'%ae'").trim()
        SUCCESS             = "SUCCESS"
        FAILED              = "FAILED"
        UNSTABLE            = "UNSTABLE"

    }

    agent {
        kubernetes {
            inheritFrom 'jenkins-node-library'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-node-library
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins-node-library
spec:
  volumes:
    - name: rsa-keys
      configMap:
        name: rsa-keys
        defaultMode: 384
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
        type: ''
  containers:
    - name: compiler
      image: etendo/compiler_jenkins:1.0.6
      ports:
        - name: ssh
          containerPort: 22
          protocol: TCP
        - name: visualvm
          containerPort: 8000
          protocol: TCP
      resources:
        limits:
          cpu: 1048m
          memory: 2000Mi
        requests:
          cpu: 1048m
          memory: 2000Mi
      volumeMounts:
        - name: rsa-keys
          mountPath: /root/.ssh/
        - name: docker-sock
          mountPath: /var/run/docker.sock
      securityContext:
        readOnlyRootFilesystem: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  securityContext: {}
    """
        }
    }

    stages {
        stage('Build Environment') {
            when {
                expression {
                    ISUPGRADECOMMIT = sh (script: "git log -1 | grep 'Upgrade version to'", returnStatus: true)
                    ISUPGRADECOMMIT != 0
                }
            }
            steps {
                container('compiler') {
                    script {
                        try {
                            env.STATUSBUILD = "1"
                            withCredentials([sshUserPrivateKey(credentialsId: 'my-credentials', keyFileVariable: 'keyfile')]) {
                                sh 'GIT_SSH_COMMAND=\"ssh -i ${keyfile} -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking=no\"\" git clone --branch ${GIT_BRANCH} ${URL_REPO_GIT} etendo_ui_library'
                                dir("etendo_ui_library") {
                                    echo "....Building Environment...."
                                    sh "curl -sL https://deb.nodesource.com/setup_16.x | bash -"
                                    sh "apt-get install -y nodejs"
                                    sh 'npm install -g yarn'
                                    sh 'npm config set registry "https://registry.npmjs.org/"'
                                    sh 'npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN'
                                    sh 'yarn install'
                                    sh 'yarn build'
                                    echo "....Build Succesful...."
                                }
                            }
                        } catch (Exception e) {
                            echo "Exception occurred: " + e.toString()
                            echo "....FAILED Build...."
                            currentBuild.result = FAILED
                            error('BUILD FAILED')
                            env.STATUSBUILD = "0"
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            when {
                expression {
                    ISUPGRADECOMMIT != 0
                    env.STATUSBUILD == "1"
                }
            }
            steps {
                container('compiler') {
                    script {
                        dir("etendo_ui_library") {
                            try {
                                env.STATUSTEST = "1"
                                echo "....Running Tests...."
                                sh "yarn test"
                                echo "....Tests Succesful...."
                            } catch (Exception e) {
                                echo "Exception occurred: " + e.toString()
                                echo "....FAILED Tests...."
                                currentBuild.result = UNSTABLE
                                unstable('TEST FAILED')
                                env.STATUSTEST = "0"
                            }
                        }
                    }
                }
            }
        }
        
        stage('Publish Next Version') {
            when {
                allOf {
                    branch 'develop'
                    expression {
                        ISUPGRADECOMMIT != 0
                        env.STATUSTEST == "1"
                    }
                }
            }
            steps {
                container('compiler') {
                    script {
                        dir("etendo_ui_library") {
                            try {
                                withCredentials([sshUserPrivateKey(credentialsId: 'my-credentials', keyFileVariable: 'keyfile')]) {
                                    withCredentials([usernamePassword(credentialsId: "etendo-bot-bitbucket", passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                                        sh """
                                        git config user.name "Etendo Bot"
                                        git config user.email "$GIT_USERNAME"
                                        """
                                        echo "....Publishing Next Version...."
                                        sh "git checkout $GIT_BRANCH"
                                        sh 'yarn config set version-git-message "Upgrade version to %s :zap:"'
                                        sh 'yarn version --patch'
                                        sh "npm publish --tag next --access public"
                                        sh 'GIT_SSH_COMMAND=\"ssh -i ${keyfile} -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking=no\"\" git push $GIT_URL'
                                    }
                                }
                            } catch (Exception e) {
                              echo "Exception occurred: " + e.toString()
                              echo "....FAILED Publish Version...."
                              currentBuild.result = FAILED
                              error('BUILD FAILED')
                              env.STATUSBUILD = "0"
                            }
                        }
                    }
                }
            }
        }
    }
    
    post {
        fixed {
            mail to: EMAIL_ADDRESS,
            subject: "âœ… FIXED - ${currentBuild.fullDisplayName}",
            body: """
${new Date()}
__________________________________________________________

âœ… ERRORS FIXED âœ…

Commit: ${URL_REPO}/commits/${env.GIT_COMMIT}
Author: ${COMMIT_AUTHOR_NAME} <${COMMIT_AUTHOR_EMAIL}>
            
The problems found in the previous run/s have been fixed!  ðŸ’ª
Check out the output in the following link: 
${env.BUILD_URL}
__________________________________________________________
            """
        }
        unstable {
            mail to: EMAIL_ADDRESS,
            subject: "ðŸš¨ TESTS FAILED - ${currentBuild.fullDisplayName}",
            body: """
${new Date()}
__________________________________________________________

ðŸš¨ BUILD UNSTABLE ðŸš¨

Commit: ${URL_REPO}/commits/${env.GIT_COMMIT}
Author: ${COMMIT_AUTHOR_NAME} <${COMMIT_AUTHOR_EMAIL}>
            
Some etendo-ui-library tests have failed!
Check out the output in the following link: 
${env.BUILD_URL}
__________________________________________________________
            """
        }
        failure {
            mail to: EMAIL_ADDRESS,
            subject: "ðŸš« ERROR - ${currentBuild.fullDisplayName}",
            body:  """
${new Date()}
__________________________________________________________

ðŸš« ERROR ðŸš«

Commit: ${URL_REPO}/commits/${env.GIT_COMMIT}
Author: ${COMMIT_AUTHOR_NAME} <${COMMIT_AUTHOR_EMAIL}>

The build or publication has failed unexpectedly.
To more information on the failing run visit: ${env.BUILD_URL}
__________________________________________________________
            """
        }
    }
    
}